{
  "Resources": {
    "ExampleServiceBucketFDFBB652": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "test-api-service-data-bucket",
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ExampleAPI61CA833D": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "Example API - https://github.com/connected-web/openapi-rest-api",
        "Name": "Example API"
      }
    },
    "ExampleAPICloudWatchRoleE0B02D49": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "ExampleAPIAccountFA5A9EBD": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ExampleAPICloudWatchRoleE0B02D49",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ExampleAPI61CA833D"
      ],
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "ExampleAPIDeployment7211F28D85e16ec536cef23a4a0b795026a9d392": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "Example API - https://github.com/connected-web/openapi-rest-api",
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        }
      },
      "DependsOn": [
        "ApiPayloadModel2BDE964E",
        "ApiResponseModel7ED3C248",
        "ExampleAPIOPTIONS3CB2EF6E",
        "ExampleAPIreceivepayloadpathParamOPTIONS560DFB8E",
        "ExampleAPIreceivepayloadpathParamPUTD17F19A1",
        "ExampleAPIreceivepayloadpathParamD39EAFE4",
        "ExampleAPIreceivepayloadOPTIONS8536B744",
        "ExampleAPIreceivepayload318A0B3F",
        "ExampleAPIstatusGETB4B924D6",
        "ExampleAPIstatusOPTIONSEC7DF4E1",
        "ExampleAPIstatus12420EBC"
      ]
    },
    "ExampleAPIDeploymentStagev1550204A9": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ExampleAPIDeployment7211F28D85e16ec536cef23a4a0b795026a9d392"
        },
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        },
        "StageName": "v1"
      },
      "DependsOn": [
        "ExampleAPIAccountFA5A9EBD"
      ]
    },
    "ExampleAPIOPTIONS3CB2EF6E": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "ExampleAPI61CA833D",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        }
      }
    },
    "ExampleAPIstatus12420EBC": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ExampleAPI61CA833D",
            "RootResourceId"
          ]
        },
        "PathPart": "status",
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        }
      }
    },
    "ExampleAPIstatusOPTIONSEC7DF4E1": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "ExampleAPIstatus12420EBC"
        },
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        }
      }
    },
    "ExampleAPIstatusGETApiPermissionMyTestStackExampleAPI8A72BB8EGETstatusAD84744A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ExampleAPIGetStatusDD96DC0A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "ExampleAPI61CA833D"
              },
              "/",
              {
                "Ref": "ExampleAPIDeploymentStagev1550204A9"
              },
              "/GET/status"
            ]
          ]
        }
      }
    },
    "ExampleAPIstatusGETApiPermissionTestMyTestStackExampleAPI8A72BB8EGETstatusEB7D6944": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ExampleAPIGetStatusDD96DC0A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "ExampleAPI61CA833D"
              },
              "/test-invoke-stage/GET/status"
            ]
          ]
        }
      }
    },
    "ExampleAPIstatusGETB4B924D6": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "ExampleAPIApiExecutionRoleF249491B",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ExampleAPIGetStatusDD96DC0A",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "ApiResponseModel7ED3C248"
              }
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "getStatus",
        "ResourceId": {
          "Ref": "ExampleAPIstatus12420EBC"
        },
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        }
      }
    },
    "ExampleAPIreceivepayload318A0B3F": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ExampleAPI61CA833D",
            "RootResourceId"
          ]
        },
        "PathPart": "receive-payload",
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        }
      }
    },
    "ExampleAPIreceivepayloadOPTIONS8536B744": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "ExampleAPIreceivepayload318A0B3F"
        },
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        }
      }
    },
    "ExampleAPIreceivepayloadpathParamD39EAFE4": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ExampleAPIreceivepayload318A0B3F"
        },
        "PathPart": "{pathParam}",
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        }
      }
    },
    "ExampleAPIreceivepayloadpathParamOPTIONS560DFB8E": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "ExampleAPIreceivepayloadpathParamD39EAFE4"
        },
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        }
      }
    },
    "ExampleAPIreceivepayloadpathParamPUTApiPermissionMyTestStackExampleAPI8A72BB8EPUTreceivepayloadpathParamDEE49722": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ExampleAPIStorePayload1114E802",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "ExampleAPI61CA833D"
              },
              "/",
              {
                "Ref": "ExampleAPIDeploymentStagev1550204A9"
              },
              "/PUT/receive-payload/*"
            ]
          ]
        }
      }
    },
    "ExampleAPIreceivepayloadpathParamPUTApiPermissionTestMyTestStackExampleAPI8A72BB8EPUTreceivepayloadpathParam08A6E985": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ExampleAPIStorePayload1114E802",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "ExampleAPI61CA833D"
              },
              "/test-invoke-stage/PUT/receive-payload/*"
            ]
          ]
        }
      }
    },
    "ExampleAPIreceivepayloadpathParamPUTD17F19A1": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "ExampleAPIApiExecutionRoleF249491B",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ExampleAPIStorePayload1114E802",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "ApiResponseModel7ED3C248"
              }
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "storePayload",
        "RequestModels": {
          "application/json": {
            "Ref": "ApiPayloadModel2BDE964E"
          }
        },
        "RequestParameters": {
          "method.request.path.pathParam": true,
          "method.request.querystring.color": false
        },
        "ResourceId": {
          "Ref": "ExampleAPIreceivepayloadpathParamD39EAFE4"
        },
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        }
      }
    },
    "ExampleAPIApiExecutionRoleF249491B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "ExampleAPIApiExecutionRoleDefaultPolicy2CE674BB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ExampleAPIGetStatusDD96DC0A",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ExampleAPIStorePayload1114E802",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ExampleAPIApiExecutionRoleDefaultPolicy2CE674BB",
        "Roles": [
          {
            "Ref": "ExampleAPIApiExecutionRoleF249491B"
          }
        ]
      }
    },
    "ExampleAPIGetStatusServiceRole709FD67A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "ExampleAPIGetStatusServiceRoleDefaultPolicy57183322": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ExampleServiceBucketFDFBB652",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ExampleServiceBucketFDFBB652",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ExampleAPIGetStatusServiceRoleDefaultPolicy57183322",
        "Roles": [
          {
            "Ref": "ExampleAPIGetStatusServiceRole709FD67A"
          }
        ]
      }
    },
    "ExampleAPIGetStatusDD96DC0A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-eu-west-2",
          "S3Key": "7d33094bbf13d31a5e6930ccf43bb6d75f43c73b31fe8b217dbca1e8bf476343.zip"
        },
        "Environment": {
          "Variables": {
            "STATUS_INFO": "{\"deploymentTime\":\"2023-12-05T12:17:39.170Z\"}",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "ExampleAPIGetStatusServiceRole709FD67A",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 25
      },
      "DependsOn": [
        "ExampleAPIGetStatusServiceRoleDefaultPolicy57183322",
        "ExampleAPIGetStatusServiceRole709FD67A"
      ]
    },
    "ExampleAPIStorePayloadServiceRoleB094D7CF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "ExampleAPIStorePayloadServiceRoleDefaultPolicy79822C62": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ExampleServiceBucketFDFBB652",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ExampleServiceBucketFDFBB652",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ExampleAPIStorePayloadServiceRoleDefaultPolicy79822C62",
        "Roles": [
          {
            "Ref": "ExampleAPIStorePayloadServiceRoleB094D7CF"
          }
        ]
      }
    },
    "ExampleAPIStorePayload1114E802": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-eu-west-2",
          "S3Key": "316a595db02a3e2a2d02e3250ac7004a86ec064313dd61f50345fb079d3cd333.zip"
        },
        "Environment": {
          "Variables": {
            "STATUS_INFO": "{\"deploymentTime\":\"2023-12-05T12:17:43.271Z\"}",
            "SERVICE_DATA_BUCKET_NAME": {
              "Ref": "ExampleServiceBucketFDFBB652"
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "ExampleAPIStorePayloadServiceRoleB094D7CF",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 25
      },
      "DependsOn": [
        "ExampleAPIStorePayloadServiceRoleDefaultPolicy79822C62",
        "ExampleAPIStorePayloadServiceRoleB094D7CF"
      ]
    },
    "ApiResponseModel7ED3C248": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Name": "ApiResponseModel",
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        },
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Basic API Response",
          "type": "object",
          "properties": {
            "statusCode": {
              "type": "integer",
              "description": "The HTTP status code of the response"
            },
            "type": {
              "type": "string",
              "description": "The type of the response: success, error, or warning"
            },
            "message": {
              "type": "string",
              "description": "The message content describing the response"
            }
          },
          "required": [
            "statusCode",
            "type",
            "message"
          ]
        }
      }
    },
    "ApiPayloadModel2BDE964E": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Name": "ApiPayloadModel",
        "RestApiId": {
          "Ref": "ExampleAPI61CA833D"
        },
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Basic API Payload",
          "type": "object",
          "properties": {
            "operationId": {
              "type": "integer",
              "description": "The HTTP status code of the response"
            },
            "payload": {
              "type": "object",
              "description": "The data payload of the request"
            }
          },
          "required": [
            "operationId",
            "payload"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ExampleAPIEndpoint5B45852B": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ExampleAPI61CA833D"
            },
            ".execute-api.eu-west-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "ExampleAPIDeploymentStagev1550204A9"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}